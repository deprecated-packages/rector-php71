services:
    -
        class: Rector\PHPStanExtensions\Rule\RequireRectorCategoryByGetNodeTypesRule
        tags: [phpstan.rules.rule]

    -
        class: Rector\PHPStanExtensions\Rule\KeepRectorNamespaceForRectorRule
        tags: [phpstan.rules.rule]

    # solve later
#    -
#        class: Symplify\PHPStanRules\Rules\ForbiddenNullableParameterRule
#        tags: [phpstan.rules.rule]
#        arguments:
#            forbidddenTypes:
#                - PhpParser\Node

    -
        class: Symplify\PHPStanRules\Rules\IfNewTypeThenImplementInterfaceRule
        tags: [phpstan.rules.rule]
        arguments:
            interfacesByNewTypes:
                Symplify\RuleDocGenerator\ValueObject\CodeSample\ConfiguredCodeSample: Rector\Core\Contract\Rector\ConfigurableRectorInterface

    -
        class: Symplify\PHPStanRules\Rules\IfImplementsInterfaceThenNewTypeRule
        tags: [phpstan.rules.rule]
        arguments:
            newTypesByInterface:
                Rector\Core\Contract\Rector\ConfigurableRectorInterface: Symplify\RuleDocGenerator\ValueObject\CodeSample\ConfiguredCodeSample

    -
        class: Symplify\PHPStanRules\Rules\ForbiddenMethodCallOnTypeRule
        tags: [phpstan.rules.rule]
        arguments:
            forbiddenMethodNamesByTypes:
                PhpParser\Node:
                    - 'getDocComment'
                    - 'getComments'
                    - 'setDocComment'

    -
        class: Symplify\PHPStanRules\Rules\OnlyOneClassMethodRule
        tags: [phpstan.rules.rule]
        arguments:
            onlyOneMethodsByType:
                Rector\Testing\PHPUnit\AbstractRectorTestCase:
                    - getRectorClass
                    - provideConfigFileInfo
                    - getRectorsWithConfiguration

    -
        class: Symplify\PHPStanRules\Rules\ForbiddenNodeRule
        tags: [phpstan.rules.rule]
        arguments:
            forbiddenNodes:
                - PhpParser\Node\Expr\ErrorSuppress
                - PhpParser\Node\Stmt\Switch_
                - PhpParser\Node\Expr\Empty_

    -
        class: Symplify\PHPStanRules\Rules\RequireClassTypeInClassMethodByTypeRule
        tags: [phpstan.rules.rule]
        arguments:
            requiredTypeInMethodByClass:
                Rector\Core\Contract\Rector\PhpRectorInterface:
                    getNodeTypes: 'PhpParser\Node'

    -
        class: Symplify\PHPStanRules\CognitiveComplexity\Rules\FunctionLikeCognitiveComplexityRule
        tags: [phpstan.rules.rule]
        arguments:
            maxMethodCognitiveComplexity: 9

    -
        class: Symplify\PHPStanRules\CognitiveComplexity\Rules\ClassLikeCognitiveComplexityRule
        tags: [phpstan.rules.rule]
        arguments:
            maxClassCognitiveComplexity: 50
            limitsByTypes:
                Rector\Core\Rector\AbstractRector: 40
                Symfony\Component\Console\Command\Command: 40
                PHPStan\Rule\Rule: 30

    # require constant in argument position
    -
        class: Symplify\PHPStanRules\Rules\RequireMethodCallArgumentConstantRule
        tags: [phpstan.rules.rule]
        arguments:
            constantArgByMethodByType:
                Symfony\Component\Console\Command\Command:
                    addArgument: [0]
                    addOption: [0]
                Symfony\Component\Console\Input\InputInterface:
                    getOption: [0]
                    getArgument: [0]
                PhpParser\Node:
                    getAttribute: [0]
                    hasAttribute: [0]
                    setAttribute: [0]

    -
        class: Symplify\PHPStanRules\Rules\SeeAnnotationToTestRule
        tags: [phpstan.rules.rule]
        arguments:
            requiredSeeTypes:
                - PHPStan\Rules\Rule
                - Rector\Core\Rector\AbstractRector

    # this rule prevents bug in phar like these: https://github.com/rectorphp/rector/pull/3692/files
    -
        class: Symplify\PHPStanRules\Rules\RequireStringArgumentInMethodCallRule
        tags: [phpstan.rules.rule]
        arguments:
            stringArgByMethodByType:
                Rector\Core\Rector\AbstractRector:
                    isObjectType: [1]

    -
        class: Symplify\PHPStanRules\Rules\ClassNameRespectsParentSuffixRule
        tags: [phpstan.rules.rule]
        arguments:
            parentClasses:
                - Rector

    -
        class: Symplify\PHPStanRules\Rules\PreferredClassRule
        tags: [phpstan.rules.rule]
        arguments:
            oldToPreferredClasses:
                # prevent PHPStorm autocomplete mess
                'Symfony\Component\DependencyInjection\Variable': 'PhpParser\Node\Expr\Variable'
                'phpDocumentor\Reflection\Types\Expression': 'PhpParser\Node\Stmt\Expression'
                'phpDocumentor\Reflection\DocBlock\Tags\Param': 'PhpParser\Node\Param'
                'phpDocumentor\Reflection\DocBlock\Tags\Return_': 'PhpParser\Node\Stmt\Return_'
                'Closure': 'PhpParser\Node\Expr\Closure'
                'PHPUnit\TextUI\Configuration\Variable': 'PhpParser\Node\Expr\Variable'
                'SebastianBergmann\Type\MixedType': 'PHPStan\Type\MixedType'
                'Hoa\Protocol\Node\Node': 'PhpParser\Node'
                'Nette\Utils\FileSystem': 'Symplify\SmartFileSystem\SmartFileSystem'
                'Symfony\Component\Filesystem\Filesystem': 'Symplify\SmartFileSystem\SmartFileSystem'
                # builder typo nodes
                PhpParser\Builder\Use_: Rector\Core\PhpParser\Builder\UseBuilder
                PhpParser\Builder\Class_: Rector\Core\PhpParser\Builder\ClassBuilder
                PhpParser\Builder\Method: Rector\Core\PhpParser\Builder\MethodBuilder
                PhpParser\Builder\Namespace_: Rector\Core\PhpParser\Builder\NamespaceBuilder
                PhpParser\Builder\Param: Rector\Core\PhpParser\Builder\ParamBuilder
                PhpParser\Builder\Property: Rector\Core\PhpParser\Builder\PropertyBuilder
                PhpParser\Builder\TraitUse: Rector\Core\PhpParser\Builder\TraitUseBuilder
